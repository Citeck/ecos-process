# ===================================================================
# Spring Boot configuration.
#
# This configuration is used for unit/integration tests.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

eureka:
  client:
    enabled: false
  instance:
    appname: eproc
    instanceId: eproc:${spring.application.instance-id:${random.value}}

spring:
  application:
    name: eproc
  profiles:
    active: test
  cache:
    type: none
  mail:
    host: localhost
  main:
    allow-bean-definition-overriding: true
  messages:
    basename: i18n/messages
  mvc:
    favicon:
      enabled: false
  task:
    execution:
      thread-name-prefix: eproc-task-
      pool:
        core-size: 1
        max-size: 50
        queue-capacity: 10000
    scheduling:
      thread-name-prefix: eproc-scheduling-
      pool:
        size: 1
  thymeleaf:
    mode: HTML
  datasource:
    url: jdbc:mongo://localhost:27017/eproc
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorAutoConfiguration
server:
  port: 10344
  address: localhost

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
  async:
    core-pool-size: 1
    max-pool-size: 50
    queue-capacity: 10000
  # To test logstash appender
  logging:
    logstash:
      enabled: true
      host: localhost
      port: 5000
      queue-size: 512
  security:
    authentication:
      jwt:
        # This token must be encoded using Base64 (you can type `echo 'secret-key'|base64` on your command line)
        base64-secret: NDdmNzQwMjc2M2MzOWVkNTAyNDczZDlmODlmMmZlYTQ5ZGFkZDk3ZTVjNjBmOGMyNjNiNWQ4ZjQ5MTFkZjg1MjExNjQ2YWYyYWE3ZGVlY2JmMDNmOWZhMTJlNjQ3NTEwMjRiMGFhZWU5ZmYzMGVkM2EyZTUzYzQwYTMxN2JkNzE=
        # Token is valid 24 hours
        token-validity-in-seconds: 86400
  metrics:
    logs: # Reports metrics in the logs
      enabled: true
      report-frequency: 60 # in seconds

# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

# application:

eproc:
  ecos-records:
    force-local-mode: true

ecos-process:
  timers:
    delay-after-fail-ms: 600000
    update-rate-ms: 30000
  camunda:
    datasource:
      type: com.zaxxer.hikari.HikariDataSource
      url: jdbc:h2:mem:camunda;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
      username: camunda
      password:
      hikari:
        poolName: HikariCamunda
        auto-commit: false

notifications:
  default:
    locale: en
    from: ecos.notifications@citeck.ru
