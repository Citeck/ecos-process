{
  "id": "bpmn-editor-messages",
  "system": true,
  "locales": [
    "en",
    "ru"
  ],
  "order": 0,
  "messages": {
    "bpmn_SendTask": [
      "Send Task",
      "Send Task"
    ],
    "bpmn_Definitions": [
      "Definitions",
      "Definitions"
    ],
    "bpmn_UserTask": [
      "User Task",
      "User Task"
    ],
    "bpmn_ServiceTask": [
      "Service Task",
      "Service Task"
    ],
    "bpmn_ScriptTask": [
      "Script Task",
      "Script Task"
    ],
    "bpmn_SequenceFlow": [
      "Sequence Flow",
      "Sequence Flow"
    ],
    "bpmn_ExclusiveGateway": [
      "Exclusive Gateway",
      "Exclusive Gateway"
    ],
    "bpmn_InclusiveGateway": [
      "Inclusive Gateway",
      "Inclusive Gateway"
    ],
    "bpmn_ParallelGateway": [
      "Parallel Gateway",
      "Parallel Gateway"
    ],
    "bpmn_EventBasedGateway": [
      "Event Based Gateway",
      "Event Based Gateway"
    ],
    "bpmn_ComplexGateway": [
      "Complex Gateway",
      "Complex Gateway"
    ],
    "bpmn_StartEvent": [
      "Start Event",
      "Start Event"
    ],
    "bpmn_EndEvent": [
      "End Event",
      "End Event"
    ],
    "bpmn_IntermediateCatchEvent_TimerEvent": [
      "Timer Intermediate Catch Event",
      "Timer Intermediate Catch Event"
    ],
    "bpmn_StartEvent_TimerEvent": [
      "Timer Start Event",
      "Timer Start Event"
    ],
    "bpmn_BoundaryEvent_TimerEvent": [
      "Timer Boundary Event",
      "Timer Boundary Event"
    ],
    "bpmn_IntermediateCatchEvent_MessageEvent": [
      "Message Intermediate Catch Event",
      "Message Intermediate Catch Event"
    ],
    "bpmn_StartEvent_MessageEvent": [
      "Message Start Event",
      "Message Start Event"
    ],
    "bpmn_StartEvent_SignalEvent": [
      "Signal Start Event",
      "Signal Start Event"
    ],
    "bpmn_StartEvent_ConditionalEvent": [
      "Conditional Start Event",
      "Conditional Start Event"
    ],
    "bpmn_BoundaryEvent_MessageEvent": [
      "Message Boundary Event",
      "Message Boundary Event"
    ],
    "bpmn_IntermediateThrowEvent_MessageEvent": [
      "Message Intermediate Throw Event",
      "Message Intermediate Throw Event"
    ],
    "bpmn_BoundaryEvent_SignalEvent": [
      "Signal Boundary Event",
      "Signal Boundary Event"
    ],
    "bpmn_IntermediateThrowEvent_SignalEvent": [
      "Signal Intermediate Throw Event",
      "Signal Intermediate Throw Event"
    ],
    "bpmn_IntermediateCatchEvent_ConditionalEvent": [
      "Conditional Intermediate Catch Event",
      "Conditional Intermediate Catch Event"
    ],
    "bpmn_BoundaryEvent_ConditionalEvent": [
      "Conditional Boundary Event",
      "Conditional Boundary Event"
    ],
    "bpmn_IntermediateThrowEvent_EscalationEvent": [
      "Escalation Intermediate Throw Event",
      "Escalation Intermediate Throw Event"
    ],
    "bpmn_BoundaryEvent_EscalationEvent": [
      "Escalation Boundary Event",
      "Escalation Boundary Event"
    ],
    "bpmn_IntermediateCatchEvent_LinkEvent": [
      "Link Intermediate Catch Event",
      "Link Intermediate Catch Event"
    ],
    "bpmn_IntermediateThrowEvent_LinkEvent": [
      "Link Intermediate Throw Event",
      "Link Intermediate Throw Event"
    ],
    "bpmn_EndEvent_TerminateEvent": [
      "Terminate End Event",
      "Terminate End Event"
    ],
    "bpmn_EndEvent_SignalEvent": [
      "Signal End Event",
      "Signal End Event"
    ],
    "bpmn_EndEvent_CompensateEvent": [
      "Compensation End Event",
      "Compensation End Event"
    ],
    "bpmn_EndEvent_ErrorEvent": [
      "Error End Event",
      "Error End Event"
    ],
    "bpmn_EndEvent_EscalationEvent": [
      "Escalation End Event",
      "Escalation End Event"
    ],
    "bpmn_EndEvent_MessageEvent": [
      "Message End Event",
      "Message End Event"
    ],
    "bpmn_IntermediateCatchEvent_SignalEvent": [
      "Signal Intermediate Catch Event",
      "Signal Intermediate Catch Event"
    ],
    "bpmn_IntermediateThrowEvent_CompensateEvent": [
      "Compensation Intermediate Throw Event",
      "Compensation Intermediate Throw Event"
    ],
    "bpmn_BoundaryEvent_CompensateEvent": [
      "Compensation Boundary Event",
      "Compensation Boundary Event"
    ],
    "bpmn_BoundaryEvent_ErrorEvent": [
      "Error Boundary Event",
      "Error Boundary Event"
    ],
    "bpmn_SubProcess": [
      "Sub Process",
      "Sub Process"
    ],
    "bpmn_label": [
      "Label",
      "Label"
    ],
    "bpmn_TextAnnotation": [
      "Text Annotation",
      "Text Annotation"
    ],
    "bpmn_Task_EcosTaskSetStatus": [
      "Set Status Task",
      "Set Status Task"
    ],
    "bpmn_Association": [
      "Association",
      "Association"
    ],
    "bpmn_DataObjectReference": [
      "Data Object Reference",
      "Data Object Reference"
    ],
    "bpmn_DataStoreReference": [
      "Data Store Reference",
      "Data Store Reference"
    ],
    "bpmn_Participant": [
      "Participant",
      "Participant"
    ],
    "bpmn_Group": [
      "Group",
      "Group"
    ],
    "bpmn_IntermediateThrowEvent": [
      "Intermediate Throw Event",
      "Intermediate Throw Event"
    ],
    "is_non_interrupting": [
      "Non Interrupting",
      "Non Interrupting"
    ]
  }
}
