{
  "id": "bpmn-type-bpmn:UserTask",
  "formKey": "",
  "title": {
    "en": "BPMN User Task Form"
  },
  "description": {},
  "customModule": "",
  "typeRef": "",
  "width": "lg",
  "system": true,
  "i18n": {
    "ru": {
      "task_priority_low": "Низкий",
      "task_priority_medium": "Средний",
      "task_priority_high": "Высокий"
    },
    "en": {
      "task_priority_low": "Low",
      "task_priority_medium": "Medium",
      "task_priority_high": "High"
    }
  },
  "definition": {
    "components": [
      {
        "label": "load roles",
        "source": {
          "type": "recordsScript",
          "recordsScript": {
            "attributes": {
              "rolesData": "model.roles[]{value:id,label:name}"
            },
            "script": "let ref = instance.options.editor.getEcosType();\n\nif (!!ref) {\n  value = ref;\n}"
          },
          "forceLoad": false
        },
        "update": {
          "type": "once",
          "rate": 300
        },
        "key": "roles",
        "type": "asyncData",
        "input": true
      },
      {
        "formRef": "uiserv/form@bpmn-base-form-elements",
        "input": true,
        "key": "includeForm2",
        "label": "Форма: Bpmn base form elements",
        "type": "includeForm"
      },
      {
        "label": {
          "ru": "Panel"
        },
        "key": "panel-recipients",
        "title": {
          "ru": "Назначение пользователей",
          "en": "User assignment"
        },
        "refreshOn": [],
        "optionalWhenDisabled": false,
        "type": "panel",
        "input": false,
        "components": [
          {
            "label": {
              "ru": "Ручное назначение",
              "en": "Manual assignment"
            },
            "key": "manualRecipientsMode",
            "refreshOn": [],
            "optionalWhenDisabled": false,
            "type": "checkbox",
            "input": true
          },
          {
            "label": {
              "en": "Assignees",
              "ru": "Реципиенты"
            },
            "key": "assignees",
            "tooltip": {
              "ru": "Выбор реципиентов задачи из ролей типа ecos",
              "en": "Selecting task assignees from roles of the ecos type"
            },
            "multiple": true,
            "validate": {
              "required": true
            },
            "reorder": false,
            "dataSrc": "custom",
            "data": {
              "custom": "values = _.get(data, 'roles.rolesData');"
            },
            "defaultValue": "",
            "refreshOn": [
              "roles"
            ],
            "optionalWhenDisabled": false,
            "customConditional": "show = !!!data.manualRecipientsMode;",
            "type": "ecosSelect",
            "input": true
          },
          {
            "label": {
              "en": "Assignees",
              "ru": "Реципиенты"
            },
            "key": "manualRecipients",
            "tooltip": {
              "ru": "Имя или recordRef реципиента. \n\nПоддерживаются expression для получения реципиентов из переменных или сервисов. Expression может вернуть множественное значение - строки разделенные запятой: user1,user2,user3\n\nНапример:\nivan.petrov\nGROUP_company_accountant\nemodel/authority-group@company_accountant\n${someVariable}\n${someService.getRecipients()},petya.voks",
              "en": "Name or recordRef of recipient. \n\nExpressions are supported to get recipients from variables or services. Expression can return multiple value - comma separated strings: user1,user2,user3\n\nExample:\nivan.petrov\nGROUP_company_accountant\nemodel/authority-group@company_accountant\n${someVariable}\n${someService.getRecipients()},petya.voks"
            },
            "multiple": true,
            "validate": {
              "required": true
            },
            "reorder": false,
            "refreshOn": [],
            "optionalWhenDisabled": false,
            "customConditional": "show = !!data.manualRecipientsMode;",
            "type": "textfield",
            "input": true
          }
        ]
      },
      {
        "input": true,
        "key": "horizontalLine2",
        "type": "horizontalLine"
      },
      {
        "label": {
          "ru": "Форма задачи",
          "en": "Task form"
        },
        "key": "formRef",
        "tooltip": {
          "ru": "Если не выбрать значение, форма будет сгенерирована автоматически с указанными результатами задачи",
          "en": "If no value is selected, the form will be generated automatically with the specified task outcomes"
        },
        "modalTitle": "",
        "journalId": "ecos-forms",
        "queryData": "",
        "refreshOn": [],
        "optionalWhenDisabled": false,
        "type": "selectJournal",
        "input": true
      },
      {
        "label": {
          "ru": "Follow up date",
          "en": "Follow up date"
        },
        "key": "followUpDate",
        "tooltip": {
          "en": "Date in ISO format or expression:\n\n- 2020-06-20T10:30:00\n-${someDate}\n\nThe expression should always resolve to a java.util.Date, java.util.String (ISO 8601), or null.",
          "ru": "Дата в формате ISO или выражение:\n\n- 2020-06-20T10:30:00\n- ${someDate}\n\nВыражение всегда должно  возвращать java.util.Date, java.util.String (ISO 8601) или null."
        },
        "hidden": true,
        "defaultValue": "",
        "refreshOn": [],
        "optionalWhenDisabled": false,
        "type": "textfield",
        "input": true,
        "inputMasks": [
          {}
        ]
      },
      {
        "label": {
          "ru": "Срок выполнения",
          "en": "Due date"
        },
        "key": "dueDate",
        "tooltip": {
          "ru": "Дата в формате ISO или выражение:\n\n- 2020-06-20T10:30:00\n- ${someDate}\n\nВыражение всегда должно  возвращать java.util.Date, java.util.String (ISO 8601) или null.",
          "en": "Date in ISO format or expression:\n\n- 2020-06-20T10:30:00\n-${someDate}\n\nThe expression should always resolve to a java.util.Date, java.util.String (ISO 8601), or null."
        },
        "defaultValue": "",
        "refreshOn": [],
        "optionalWhenDisabled": false,
        "type": "textfield",
        "input": true,
        "inputMasks": [
          {}
        ]
      },
      {
        "label": {
          "en": "Priority",
          "ru": "Приоритет"
        },
        "key": "priority",
        "validate": {
          "required": true
        },
        "dataSrc": "values",
        "data": {
          "values": [
            {
              "label": "task_priority_low",
              "value": "LOW"
            },
            {
              "label": "task_priority_medium",
              "value": "MEDIUM"
            },
            {
              "label": "task_priority_high",
              "value": "HIGH"
            }
          ],
          "headers": [
            {
              "key": "",
              "value": ""
            }
          ]
        },
        "defaultValue": "",
        "customDefaultValue": "value = \"MEDIUM\";",
        "optionalWhenDisabled": false,
        "customConditional": "show = _.isEmpty(data.priorityExpression) || data.priorityExpression.trim().length === 0;",
        "type": "ecosSelect",
        "input": true
      },
      {
        "label": {
          "ru": "Приоритет (выражение)",
          "en": "Priority (expression)"
        },
        "key": "priorityExpression",
        "tooltip": {
          "ru": "Expression для получения приоритета задачи из переменных или сервисов.\n\nВыражение должно вернуть число, представляющее собой приоритет:\nВысокий - 1\nСредний - 2\nНизкий - 3",
          "en": "Expression to get the task priority from variables or services.\n\nExpression should return a number that represents the priority:\nHigh - 1\nMedium - 2\nLow - 3"
        },
        "inputMasks": [
          {
            "label": "",
            "mask": ""
          }
        ],
        "defaultValue": "",
        "refreshOn": [],
        "optionalWhenDisabled": false,
        "type": "textfield",
        "input": true
      },
      {
        "label": {
          "en": "Task outcomes",
          "ru": "Результаты задачи"
        },
        "key": "outcomes",
        "multiple": true,
        "validate": {
          "required": true,
          "minLength": "",
          "maxLength": ""
        },
        "disableAddingRemovingRows": false,
        "addAnotherPosition": "bottom",
        "removePlacement": "col",
        "defaultOpen": false,
        "layoutFixed": false,
        "enableRowGroups": false,
        "reorder": true,
        "defaultValue": [
          {
            "textField": "",
            "id": "",
            "name": {
              "ru": "",
              "en": ""
            },
            "objectObject": {
              "ru": "",
              "en": ""
            },
            "_name": {
              "ru": "",
              "en": ""
            }
          }
        ],
        "refreshOn": [],
        "optionalWhenDisabled": false,
        "type": "datagrid",
        "input": true,
        "components": [
          {
            "label": {
              "ru": "Идентификатор",
              "en": "Id"
            },
            "key": "id",
            "validate": {
              "pattern": "([a-zA-Z0-9-_]+$)"
            },
            "inputMasks": [
              {
                "label": "",
                "mask": ""
              }
            ],
            "defaultValue": "",
            "refreshOn": [],
            "optionalWhenDisabled": false,
            "type": "textfield",
            "pattern": "^[a-zA-Z0-9-_*]+$",
            "minLength": 3,
            "input": true,
            "row": "0-0"
          },
          {
            "label": {
              "en": "Name",
              "ru": "Название"
            },
            "key": "name",
            "refreshOn": [],
            "optionalWhenDisabled": false,
            "type": "mlText",
            "input": true,
            "row": "0-1"
          },
          {
            "label": "",
            "key": "submit-outcome-config",
            "action": "custom",
            "state": "",
            "showValidations": false,
            "custom": "let currentRow = row;\n\nlet formInstance = instance.root;\nformInstance.showErrors([]);\n\nlet incomeOutcomes = formInstance.submission.data.outcomes\n\nconst applyOutcomeData = (newOutcomes) => {\n\n    let updatedData = [];\n\n    incomeOutcomes.forEach(outcome => {\n        if (outcome.id === newOutcomes.id) {\n            let updated = {\n                ...outcome,\n                config: {\n                    theme: newOutcomes.theme\n                }\n            }\n            updatedData.push(updated)\n        } else {\n            updatedData.push(outcome)\n        }\n    })\n\n    submission = {\n        ...submission,\n        data: {\n            ...submission.data,\n            outcomes: updatedData\n        }\n    }\n    formInstance.submission = submission;\n}\n\nCiteck.EcosFormUtils.getFormById('uiserv/form@bpmn-user-task-outcome-config-form', {\n    definition: 'definition?json',\n    i18n: 'i18n?json'\n}).then(function(formConfig) {\n\n    const formData = {\n        id: currentRow['id']\n    };\n\n    let config = currentRow['config'] || {};\n    let theme = config['theme'];\n    if (theme === undefined || theme.length === 0) {\n        theme = 'PRIMARY';\n    }\n\n    formData['theme'] = theme;\n\n    Citeck.Dialogs.showFormDialog({\n        title: Citeck.helpers.getMLValue({\n            'en': 'Outcome Configuration',\n            'ru': 'Настройка результата задачи'\n        }),\n        showDefaultButtons: true,\n        formDefinition: formConfig.definition,\n        formData: formData,\n        formI18n: formConfig.i18n,\n        onSubmit: submission => {\n            let data = submission.data || {};\n            applyOutcomeData(data)\n        }\n    })\n});",
            "headers": [
              {
                "header": "",
                "value": ""
              }
            ],
            "hideLabel": true,
            "leftIcon": "icon-settings",
            "refreshOn": [],
            "optionalWhenDisabled": false,
            "type": "button",
            "input": true,
            "row": "0-2"
          }
        ]
      },
      {
        "label": {
          "ru": "Panel"
        },
        "key": "panel-advanced-mi",
        "refreshOn": [],
        "optionalWhenDisabled": false,
        "customConditional": "show = !!data.manualRecipientsMode;",
        "type": "panel",
        "input": false,
        "components": [
          {
            "formRef": "uiserv/form@bpmn-base-form-multi-instance",
            "input": true,
            "key": "includeForm3",
            "label": "Форма: BPMN base form Multi Instance",
            "type": "includeForm"
          }
        ]
      }
    ],
    "formId": "bpmn-type-bpmn:UserTask"
  },
  "attributes": {},
  "notExists": false
}
