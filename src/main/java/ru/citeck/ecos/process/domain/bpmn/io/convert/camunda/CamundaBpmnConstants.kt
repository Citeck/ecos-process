package ru.citeck.ecos.process.domain.bpmn.io.convert.camunda

import org.camunda.bpm.model.bpmn.impl.BpmnModelConstants.*
import javax.xml.namespace.QName

val CAMUNDA_CLASS = QName(CAMUNDA_NS, CAMUNDA_ATTRIBUTE_CLASS)

val CAMUNDA_ASSIGNEE = QName(CAMUNDA_NS, CAMUNDA_ATTRIBUTE_ASSIGNEE)
val CAMUNDA_CANDIDATE_USERS = QName(CAMUNDA_NS, CAMUNDA_ATTRIBUTE_CANDIDATE_USERS)
val CAMUNDA_CANDIDATE_GROUPS = QName(CAMUNDA_NS, CAMUNDA_ATTRIBUTE_CANDIDATE_GROUPS)
val CAMUNDA_PRIORITY = QName(CAMUNDA_NS, CAMUNDA_ATTRIBUTE_PRIORITY)
val CAMUNDA_DUE_DATE = QName(CAMUNDA_NS, CAMUNDA_ATTRIBUTE_DUE_DATE)
val CAMUNDA_FOLLOW_UP_DATE = QName(CAMUNDA_NS, CAMUNDA_ATTRIBUTE_FOLLOW_UP_DATE)
val CAMUNDA_FORM_KEY = QName(CAMUNDA_NS, CAMUNDA_ATTRIBUTE_FORM_KEY)

val CAMUNDA_COLLECTION = QName(CAMUNDA_NS, CAMUNDA_ATTRIBUTE_COLLECTION)
val CAMUNDA_ELEMENT_VARIABLE = QName(CAMUNDA_NS, CAMUNDA_ATTRIBUTE_ELEMENT_VARIABLE)

val CAMUNDA_RESULT_VARIABLE = QName(CAMUNDA_NS, CAMUNDA_ATTRIBUTE_RESULT_VARIABLE)
val CAMUNDA_ASYNC_BEFORE = QName(CAMUNDA_NS, CAMUNDA_ATTRIBUTE_ASYNC_BEFORE)
val CAMUNDA_ASYNC_AFTER = QName(CAMUNDA_NS, CAMUNDA_ATTRIBUTE_ASYNC_AFTER)
val CAMUNDA_JOB_PRIORITY = QName(CAMUNDA_NS, CAMUNDA_ATTRIBUTE_JOB_PRIORITY)
val CAMUNDA_EXCLUSIVE = QName(CAMUNDA_NS, CAMUNDA_ATTRIBUTE_EXCLUSIVE)
